package handling.opcode;

import handling.ExternalCodeTableGetter;
import handling.MapleServerHandler;
import tools.StringUtil;
import tools.data.WritableIntValueHolder;

import java.io.*;
import java.util.Properties;

public enum RecvPacketOpcode implements WritableIntValueHolder {
    CHAT_SERVER_PONG(14),
    CHAT_SERVER_REQUEST(1),
    CP_DUMMY_CODE(102),
    SecurityPacket(103),
    CP_LoginBasicInfo(104),
    CP_CheckLoginAuthInfo(105),
    SERVERSTATUS_REQUEST(106),
    CP_SelectWorld(107),
    CP_CheckSPWExistRequest(111),
    CP_MigrateIn(113),
    CP_SelectCharacter(114),
    CP_SelectAccount(115),
    CP_WorldInfoRequest(116),
    CP_CheckDuplicatedID(117),
    CP_LogoutWorld(118),
    CP_PermissionRequest_Fake(119),
    CP_CheckLoginAuthInfo_Fake(120),
    CP_CreateMapleAccount_Fake(121),
    CP_SelectAccount_Fake(122),
    CP_SelectWorld_Fake(123),
    CP_SelectCharacter_Fake(124),
    CP_CreateNewCharacter_Fake(125),
    CP_CreateNewCharacter(126),
    CP_CreateNewCharacterInCS(127),
    CP_CreateNewCharacter_PremiumAdventurer(32766),
    CP_DeleteCharacter(128),
    CP_ReservedDeleteCharacterConfirm(129),
    CP_ReservedDeleteCharacterCancel(130),
    CP_ExceptionLog(132),
    CP_AliveAck(152),
    CP_ClientDumpLog(155),
    SET_ACC_CASH(156),
    QUICK_BUY_CS_ITEM(157),
    REQUEST_CONNECTION(32766),
    CLIENT_CRASH(160),
    SET_GENDER(162),
    LICENSE_REQUEST(170),
    STRANGE_DATA(172),
    LOGIN_AUTHKEY(175),
    CP_CheckSPWOnCreateNewCharacter(176),
    CP_DirectGoToField(179),
    CP_UpdateCharacterSelectList(180),
    CREATE_VERIFY(182),
    CP_UserAntiMacroQuestionResult(184),
    CP_RenameCharacter(197),
    CP_BEGIN_USER(205),
    CP_UserTransferFieldRequest(206),
    CP_UserTransferChannelRequest(207),
    CP_UserTransferToHubRequest(208),
    CP_WorldTransferRequest(209),
    CP_WorldTransferShinningStarRequest(210),
    CP_UserMigrateToCashShopRequest(211),
    CP_UserMigrateToAuctionRequest(212),
    CP_UserMove(219),
    CP_UserSitRequest(220),
    CP_UserPortableChairSitRequest(221),
    CP_UserEmoticonItemUseRequest(222),
    CP_UserDanceStopRequest(223),
    CP_UserMeleeAttack(224),
    CP_UserShootAttack(225),
    CP_UserMagicAttack(226),
    CP_UserBodyAttack(227),
    CP_UserAreaDotAttack(228),
    UserSpotlightAttack(229),
    CP_UserMovingShootAttackPrepare(230),
    CP_UserHit(231),
    CP_UserAttackUser(232),
    CP_UserChat(233),
    CP_UserItemChat(234),
    CP_UserADBoardClose(235),
    CP_UserEmotion(236),
    CP_AndroidEmotion(237),
    CP_UserActivateEffectItem(238),
    CP_UserMonkeyEffectItem(239),
    CP_UserActivateNickItem(240),
    CP_UserActivateDamageSkin(242),
    USE_ACTIVATE_DAMAGE_SKIN_PREMIUM(243),
    CP_UserDamageSkinSaveRequest(246),
    CP_UserDefaultWingItem(247),
    CP_UserKaiserTransformWing(-2),
    CP_UserKaiserTransformTail(-2),
    CP_UserUpgradeTombEffect(248),
    CP_UserHP(249),
    CP_Premium(250),
    CP_UserBanMapByMob(251),
    CP_UserMonsterBookSetCover(252),
    CP_UserSelectNpc(253),
    CP_UserRemoteShopOpenRequest(32766),
    CP_UserScriptMessageAnswer(254),
    CP_UserShopRequest(255),
    CP_UserTrunkRequest(256),
    CP_UserEntrustedShopRequest(32766),
    CP_UserStoreBankRequest(32766),
    CP_UserParcelRequest(257),
    CP_UserEffectLocal(258),
    CP_UserFinalAttackRequest(259),
    CREATE_AFFECTED_AREA_REQUEST(262),
    USE_AFFECTED_AREA_REQUEST(263),
    CP_UserCreateHolidomRequest(264),
    CP_ReqMakingSkillEff(265),
    CP_ShopScannerRequest(32766),
    CP_ShopLinkRequest(32766),
    CP_AuctionRequest(266),
    CP_AuctionExit(267),
    CP_UserGatherItemRequest(269),
    CP_UserSortItemRequest(270),
    CP_UserChangeSlotPositionRequest(271),
    CP_UserTextEquipInfo(272),
    CP_UserPopOrPushBagItemToInven(273),
    CP_UserBagToBagItem(274),
    CP_UserPourInBagToBag(275),
    CP_UserStatChangeItemUseRequest(276),
    CP_UserStatChangeItemCancelRequest(277),
    CP_UserStatChangeByPortableChairRequest(278),
    CP_UserMobSummonItemUseRequest(279),
    CP_UserPetFoodItemUseRequest(280),
    CP_UserTamingMobFoodItemUseRequest(281),
    CP_UserScriptItemUseRequest(282),
    CP_UserRecipeOpenItemUseRequest(283),
    CP_UserConsumeCashItemUseRequest(284),
    CP_UserAdditionalSlotExtendItemUseRequest(285),
    CP_UserCashPetPickUpOnOffRequest(286),
    CP_UserCashPetSkillSettingRequest(287),
    CP_UserOptionChangeRequest(288),
    CP_UserDestroyPetItemRequest(289),
    CP_UserBridleItemUseRequest(290),
    CP_UserSkillLearnItemUseRequest(291),
    CP_UserSkillResetItemUseRequest(292),
    CP_UserAbilityResetItemUseRequest(293),
    CP_UserAbilityChangeItemUseRequest(294),
    CP_UserExpConsumeItemUseRequest(295),
    CP_UserMonsterLifeInviteItemUseRequest(296),
    CP_UserExpItemGetRequest(297),
    CP_UserCharSlotIncItemUseRequest(298),
    CP_UserCharRenameItemUseRequest(32766),
    CP_UserKaiserColorChangeItemUseRequest(299),
    CP_UserShopScannerItemUseRequest(32766),
    CP_UserMapTransferItemUseRequest(301),
    CP_UserPortalScrollUseRequest(302),
    CP_UserFieldTransferRequest(303),
    CP_UserUpgradeItemUseRequest(304),
    CP_UserUpgradeAssistItemUseRequest(305),
    CP_UserHyperUpgradeItemUseRequest(306),
    CP_UserExItemUpgradeItemUseRequest(307),
    CP_UserItemOptionUpgradeItemUseRequest(312),
    CP_UserAdditionalOptUpgradeItemUseRequest(313),
    CP_UserItemSlotExtendItemUseRequest(314),
    CP_UserWeaponTempItemOptionRequest(315),
    CP_UserItemSkillSocketUpgradeItemUseRequest(316),
    CP_UserItemSkillOptionUpgradeItemUseRequest(317),
    CP_UserFreeMiracleCubeItemUseRequest(319),
    CP_UserEquipmentEnchantWithSingleUIRequest(321),
    UserArcaneForceRequest(324),
    UserAuthenticForceRequest(325),
    CP_UserUIOpenItemUseRequest(326),
    CP_UserBagItemUseRequest(327),
    CP_UserItemReleaseRequest(328),
    CP_UserMemorialCubeOptionRequest(330),
    UserCharacterPotentialRequest(331),
    CP_UserToadsHammerRequest(333),
    CP_UserToadsHammerHelpRequest(334),
    CP_UserChangeSoulCollectionRequest(337),
    CP_UserSelectSoulSkillUpRequest(338),
    CP_UserAbilityUpRequest(339),
    CP_UserAbilityMassUpRequest(340),
    CP_UserDotHeal(341),
    CP_UserChangeStatRequest(342),
    DEL_TEACH_SKILL(345),
    SET_TEACH_SKILL(346),
    CP_UserSkillUpRequest(348),
    CP_UserSkillUseRequest(349),
    CP_UserSkillCancelRequest(351),
    CP_UserSkillFinishRequest(352),
    CP_UserSkillPrepareRequest(353),
    SUPER_CANNON_REQUEST(355),
    CP_UserDropMoneyRequest(356),
    CP_UserGivePopularityRequest(357),
    CP_UserCharacterInfoRequest(360),
    CP_UserActivatePetRequest(361),
    CP_UserRegisterPetAutoBuffRequest(362),
    CP_UserTemporaryStatUpdateRequest(363),
    CP_UserPortalScriptRequest(364),
    CP_UserPortalTeleportRequest(365),
    CP_UserCallingTeleportRequest(366),
    CP_UserMapTransferRequest(368),
    CP_UserAntiMacroItemUseRequest(369),
    CP_UserAntiMacroSkillUseRequest(370),
    CP_UserAntiMacroRefreshRequest(371),
    CP_UserClaimRequest(372),
    CP_UserQuestRequest(373),
    CP_UserMedalReissueRequest(374),
    CP_UserCalcDamageStatSetRequest(375),
    CP_UserB2BodyRequest(376),
    CP_UserThrowGrenade(377),
    CP_UserDestroyGrenade(378),
    CP_UserCreateAuraByGrenade(379),
    CP_UserSetMoveGrenade(380),
    CP_UserMacroSysDataModified(381),
    REWARD_ITEM(383),
    CP_UserItemMakeRequest(384),
    CP_UserRepairDurabilityAll(386),
    CP_UserRepairDurability(387),
    CP_UserFollowCharacterRequest(391),
    CP_UserFollowCharacterWithdraw(392),
    CP_UserSelectPQReward(393),
    CP_UserRequestPQReward(394),
    CP_SetPassenserResult(395),
    CP_UserRequestInstanceTable(396),
    CP_UserRequestCreateItemPot(397),
    CP_UserRequestRemoveItemPot(398),
    CP_UserRequestIncItemPotLifeSatiety(399),
    CP_UserRequestCureItemPotLifeSick(400),
    CP_UserRequestComplateToItemPot(401),
    CP_UserRequestRespawn(402),
    CP_UserConsumeHairItemUseRequest(403),
    CP_UserForceAtomCollision(407),
    USER_TRUMP_SKILL_ACTION_REQUEST(410),
    DOT_HEAL_HP_REQUEST(411),
    LapidificationStateChange(414),
    CP_UserRequestCharacterPotentialSkillRandSet(415),
    UserRequestCharacterPotentialSkillRandStatSet(416),
    CP_UserRequestCharacterPotentialSkillRandSetUI(417),
    CP_UserProtectBuffOnDieItemRequest(419),
    CP_UserProtectBuffOnDieMaplePointRequest(420),
    CP_UserProtectExpOnDieMaplePointRequest(32766),
    PVP_RESPAWN(32766),
    CP_ZeroTag(431),
    CP_ZeroShareCashEquipPart(432),
    CP_ZeroLastAssistState(433),
    CP_UserShootAttackInFPS(434),
    CP_UserLuckyItemUseRequest(435),
    CP_UserMobMoveAbilityChange(436),
    CP_UserDragonAction(437),
    CP_UserDragonBreathEarthEffect(438),
    CP_UserRenameRequest(439),
    CheckSPWOnRename(440),
    CP_BroadcastMsg(441),
    CP_GroupMessage(442),
    CP_GroupItemMessage(443),
    CP_FieldUniverseMessage(444),
    CP_Whisper(445),
    CP_ItemWhisper(446),
    CP_Messenger(447),
    CP_MiniRoom(448),
    CP_PartyRequest(450),
    CP_PartyResult(451),
    CP_PartyInvitableSet(452),
    CP_ExpeditionRequest(453),
    CP_PartyAdverRequest(454),
    CP_UrusPartyRequest(455),
    CP_GuildRequest(456),
    CP_GuildResult(457),
    CP_GuildJoinRequest(458),
    CP_GuildJoinCancelRequest(459),
    CP_GuildJoinAccept(460),
    CP_GuildJoinReject(461),
    CP_TowerRankRequest(463),
    CP_Admin(464),
    CP_Log(466),
    CP_FriendRequest(471),
    CP_LoadAccountIDOfCharacterFriendRequest(472),
    CP_MemoRequest(473),
    CP_MemoFlagRequest(474),
    CP_EnterTownPortalRequest(476),
    CP_EnterRandomPortalRequest(477),
    CP_EnterOpenGateRequest(478),
    CP_FuncKeyMappedModified(481),
    CP_RPSGame(482),
    CP_GSRPSGame(483),
    CP_GSRPSForceSelect(484),
    CP_MarriageRequest(486),
    CP_WeddingWishListRequest(487),
    CP_GuestBless(488),
    CP_BoobyTrapAlert(489),
    CP_StalkBegin(490),
    CP_AllianceRequest(491),
    CP_AllianceResult(492),
    CP_TalkToTutor(493),
    CP_TalkToPartner(494),
    CP_UserSwitchRP(495),
    CP_RequestIncCombo(496),
    CP_RequestDecCombo(497),
    CP_RequestSetBlessOfDarkness(498),
    CP_RequestSetHpBaseDamage(499),
    CP_MobCrcKeyChangedReply(500),
    CP_MobCrcDataResult(501),
    CRAFT_DONE(505),
    CRAFT_EFFECT(506),
    CRAFT_MAKE(507),
    CP_MicroBuffEndTime(510),
    CP_UserTransferFreeMarketRequest(512),
    CP_UserRequestSetStealSkillSlot(513),
    CP_UserRequestStealSkillMemory(514),
    CP_UserRequestStealSkillList(515),
    CP_UserRequestStealSkill(516),
    CP_ResetCrossHunterAlert(523),
    CP_CrossHunterCompleteRequest(524),
    CP_CrossHunterShopRequest(525),
    CP_UserRequestFlyingSwordStart(527),
    CP_UserHyperSkillUpRequest(534),
    CP_UserHyperSkillResetRequset(535),
    CP_UserHyperStatSkillUpRequest(536),
    CP_UserHyperStatSkillResetRequest(537),
    CP_UserSetDressChangedRequest(539),
    CP_EntryRecordRequest(540),
    CP_SetMaxGauge(541),
    CP_UserReturnEffectResponse(542),
    CP_RequestReloginCookie(555),
    CP_WaitQueueRequest(556),
    CP_CheckTrickOrTreatRequest(557),
    USER_HOWLING_STORM_STACK(573),
    CP_UserQuickMoveScript(574),
    CP_TimeGateRequest(575),
    CP_UserSelectAndroid(576),
    CP_UserCompleteNpcSpeech(577),
    ComboCheckRequest(578),
    AUTO_USE_JUDGEMENT(579),
    PoisonAreaRemove(596),
    JobFreeChangeRequest(598),
    SOUL_MODE(603),
    SPECIAL_OPERATION(614),
    USE_TOWERCHAIR_SETTING(620),
    OpenMapleUnionRequest(625),
    UPDATE_BULLET_COUNT(636),
    VMATRIX_MAKE_REQUEST(641),
    VMATRIX_HELP_REQUEST(642),
    VMATRIX_VERIFY(643),
    ErosionsrReduce(646),
    EventReviveRequest(648),
    ForceTargetRequest(651),
    CrystalCharge(653),
    UN_PACKET_12(657),
    PREVIEW_CHOICE_BEAUTY_CARD(666),
    CP_PetMove(669),
    CP_PetAction(670),
    CP_PetInteractionRequest(671),
    CP_PetDropPickUpRequest(672),
    CP_PetStatChangeItemUseRequest(673),
    CP_PetUpdateExceptionListRequest(674),
    CP_PetFoodItemUseRequest(675),
    CP_PetOpenShop(676),
    CP_SkillPetMove(679),
    CP_SkillPetAction(680),
    CP_SkillPetState(681),
    CP_SkillPetDropPickUpRequest(682),
    CP_SkillPetUpdateExceptionListRequest(683),
    CP_SummonedMove(686),
    CP_SummonedAttack(687),
    CP_SummonedHit(688),
    CP_SummonedSkill(689),
    SummonedMagicAltar(690),
    CP_SummonedRemove(691),
    CP_SummonedAction(693),
    CP_SummonedAssistAttackDone(694),
    SummonedSarahAction(695),
    SummonedJavelinAction(698),
    CP_DragonMove(705),
    CP_DragonGlide(706),
    ReturnTeleportDebuff(707),
    CP_AndroidMove(709),
    CP_AndroidActionSet(710),
    CP_FoxManMove(713),
    CP_FoxManActionSetUseRequest(714),
    CP_QuickslotKeyMappedModified(716),
    CP_PassiveskillInfoUpdate(717),
    CLOSE_WINDOW(718),
    PLAYER_VIEW_RANGE(721),
    CP_CheckProcess(724),
    CP_MemoInGameRequest(725),
    CP_EgoEquipGaugeCompleteReturn(726),
    CP_EgoEquipCreateUpgradeItem(727),
    CP_EgoEquipCreateUpgradeItemCostRequest(728),
    CP_EgoEquipTalkRequest(729),
    CP_EgoEquipCheckUpdateItemRequest(730),
    CP_InheritanceInfoRequest(731),
    CP_InheritanceUpgradeRequest(732),
    CP_MirrorReadingSelectBookRequest(733),
    CP_LikePoint(734),
    CP_RequestArrowPlaterObj(740),
    USE_GROWTH_HELPER_REQUEST(-2),
    UserSetCustomizeEffect(763),
    USE_CONTENT_MAP_MINI(765),
    USE_CONTENT_MAP(766),
    CombingRoomActionReq(767),
    UserNonTargetForceAtomAttack(769),
    UserRunScript(770),
    BossPartyCheckRequest(781),
    MonsterCollectionCompleteRewardRequest(782),
    MonsterCollectionExploreRequest(783),
    ENTER_STARTPLANET(-2),
    GAME_EXIT(811),
    TRACK_FLAMES(812),
    SELECT_JAGUAR(818),
    CALL_FRIENDS(819),
    USE_NEBULITE(820),
    POTION_POT_USE(820),
    POTION_POT_ADD(821),
    POTION_POT_MODE(822),
    POTION_POT_INCR(823),
    USE_SPECIAL_ITEM(824),
    PAM_SONG(825),
    APPLY_HYUNCUBE(826),
    BBS_OPERATION(829),
    SELECT_CHAIR(832),
    Ping_ClientToGamge(835),
    TRANSFORM_PLAYER(836),
    OPEN_AVATAR_RANDOM_BOX(837),
    ENTER_MTS(-2),
    SOLOMON(838),
    GACH_EXP(839),
    FISHING(843),
    USE_TREASUER_CHEST(844),
    SHIKONGJUAN(-2),
    GIVE_KSPSYCHIC(884),
    ATTACK_KSPSYCHIC(885),
    CANCEL_KSPSYCHIC(886),
    GIVE_KSULTIMATE(888),
    ATTACK_KSULTIMATE(889),
    MIST_KSULTIMAT(890),
    CANCEL_KSULTIMATE(891),
    TORNADO_KSULTIMATE(892),
    SkillStageChangeRequest(899),
    SIGNIN_OPERATION(901),
    SKILL_ONOFF(902),
    AvatarEffectSkillOnOff(903),
    RevolvingCannonRequest(909),
    DimensionMirrorMove(911),
    VAddSkillReadyRequest(914),
    VAddSkillAttackRequest(915),
    MULTI_SKILL_ATTACK_REQUEST(916),
    RemoteControlDiceNumber(924),
    MULTI_SKILL_CHARGE_REQUEST(925),
    MapleUnionRequest(928),
    CHANGE_ANDROID_ANTENNA(931),
    MapleUnionPresetRequest(933),
    ForceAtomNextTarget(944),
    SelflessState(952),
    CHARGE_INFINITE_FLAME(964),
    CHARGE_PRIMAL_GRENADE(965),
    ADELE_CHARGE_REQUEST(966),
    MaliceChargeRequest(967),
    LaraSkillChargeRequest(968),
    PoisonAreaCreate(969),
    SET_CHAR_CASH(981),
    OPEN_WORLDMAP(983),
    HoYoungHealRequest(986),
    Auto5thRevenant_ReduceAnger(1001),
    Auto5thRevenant_ReduceHP(1005),
    SilhouetteMirageCharge(1006),
    UseJupiterThunder(1007),
    JupiterThunderAction(1008),
    JupiterThunderEnd(1010),
    Auto5thGoddessBless(1012),
    MULTI_SKILL_TIMEOUT_CHARGE_REQUEST(1017),
    ReincarnationModeSelect(1020),
    CreateForceAtomObject(1028),
    DivineJudgmentStatReset(1048),
    SpeedMirageObjectCreate(1051),
    ApplyAffectAreaEffect(1053),
    CP_MobMove(1102),
    CP_MobApplyCtrl(1103),
    CP_MobDropPickUpRequest(1104),
    CP_MobHitByObstacle(1105),
    CP_MobHitByObstacleAtom(1106),
    CP_MobHitByMob(1107),
    CP_MobSelfDestruct(1109),
    CP_MobSelfDestructCollisionGroup(1110),
    CP_MobAttackMob(1111),
    CP_MobSkillDelayEnd(1112),
    CP_MobTimeBombEnd(1113),
    CP_MobEscortCollision(1114),
    CP_MobRequestEscortInfo(1115),
    CP_MobEscortStopEndRequest(1116),
    CP_MobAreaAttackDisease(1117),
    CP_MobExplosionStart(1118),
    CP_MobLiftingEnd(1119),
    CP_MobUpdateFixedMoveDir(1120),
    CP_MobCreateFireWalk(1121),
    CP_MobAfterDeadRequest(1122),
    CP_MobDamageShareInfo(1123),
    CP_MobCreateAffectedArea(1124),
    CP_MobDownResponse(1125),
    CP_NpcMove(1142),
    CP_NpcSpecialAction(1143),
    CP_DropPickUpRequest(1149),
    CP_ReactorHit(1152),
    CP_ReactorClick(1153),
    CP_ReactorRectInMob(1154),
    CP_ReactorOnKey(1155),
    CP_GatherRequest(1158),
    UN_PACKET_8(1163),
    CP_DecomposerRequest(1170),
    PLAYER_UPDATE(1187),
    CP_PartyMemberCandidateRequest(1196),
    CP_UrusPartyMemberCandidateRequest(1297),
    CP_PartyCandidateRequest(1198),
    CP_GatherEndNotice(1205),
    CP_ActChangeReactorUseRequst(1206),
    CP_MakeEnterFieldPacketForQuickMove(1209),
    CP_RuneStoneUseReq(1210),
    CP_RuneStoneSkillReq(1211),
    USE_RUNE_ACTION(1212),
    OBTACLE_ATOM_COLLISION(1213),
    MOBZONESTATE_RESULT(1215),
    PeacemakerHeal(1220),
    PeacemakerBuff(1221),
    ExitGaintBoss(1303),
    DEMIANOBJECT_MAKE_ENTER_ACK(1366),
    DEMIANOBJECT_NODE_END(1367),
    DEMIANOBJECT_ERR_RECREATE(1368),
    LucidSpecialHorn(1388),
    LucidSpecialAttackEnd(1385),
    PopulatusCraneRequest(1390),
    WaterWarpIsland(1416),
    WaterGunExit(1417),
    UseMoonlight(1425),
    WillBeholderHit(1426),
    WillNarrowWebDamage(1427),
    DiceMasterMoveDone(1432),
    DiceMasterExit(1433),
    DiceMasterThrowDice(1434),
    DiceMasterGameStart(1435),
    CaptainNomadAttack(1443),
    CaptainNomadStart(1444),
    CaptainNomadExit(1445),
    CP_ForceAtomObjectAction(1496),
    CP_ForceAtomObjectRemove(1497),
    CP_ForceAtomObjectMove(1498),
    CP_CashShopChargeParamRequest(1547),
    CP_CashShopQueryCashRequest(1548),
    CP_CashShopCashItemRequest(1549),
    CP_CashShopCheckCouponRequest(1550),
    CP_CashShopMemberShopRequest(1551),
    CP_CashShopGiftMateInfoRequest(1552),
    CP_CashShopSearchLog(1553),
    CP_CashShopCoodinationRequest(1554),
    CP_CashShopCheckMileageRequest(1555),
    CP_MVP_DailyPack_Request(1560),
    CP_MVP_SpecialPack_Request(1561),
    MVP_RoyalPack_Request(1562),
    MVP_GradePack_Request(1563),
    CP_GoldHammerRequest(1583),
    CP_GoldHammerComplete(1584),
    CP_PlatinumHammerRequest(1587),
    CP_BattleRecordOnOffRequest(1590),
    CP_BattleRecordSkillDamageLog(1591),
    TAP_JOY_RESPONSE(-2),
    TAP_JOY_DONE(-2),
    TAP_JOY_NEXT_STAGE(-2),
    HIDDEN_TAIL_ADN_EAR(1654),
    REWARD(1658),
    EFFECT_SWITCH(1664),
    CASH_ITEM_OP_REQUEST(1670),
    TMS_SPECIAL_REQUEST(1671),
    SurplusSupplyRecover(1674),
    Count(2048),
    UNKNOWN(-2);

    static {
        reloadValues();
    }

    private int code = -2;
    private boolean CheckState;

    RecvPacketOpcode(int code) {
        this.code = code;
    }

    RecvPacketOpcode(int code, boolean CheckState) {
        this.CheckState = CheckState;
        this.code = code;

    }

    private static RecvPacketOpcode getByName(String val) {
        for (RecvPacketOpcode op : RecvPacketOpcode.values()) {
            if (op.name().equals(val)) {
                return op;
            }
        }
        return null;
    }

    public static RecvPacketOpcode getByValue(int value) {
        for (RecvPacketOpcode op : RecvPacketOpcode.values()) {
            if (op.code == value) {
                return op;
            }
        }
        return null;
    }

    private static Properties getDefaultProperties() throws Exception {
        String fileName = "recvops.properties";
        Properties props = new Properties();
        try (FileInputStream fis = new FileInputStream(fileName); InputStreamReader isr = new InputStreamReader(fis, StringUtil.codeString(fileName)); BufferedReader buff = new BufferedReader(isr)) {
            props.load(buff);
        } catch (Exception ex) {
            File file = new File("properties/" + fileName);
            if (file.exists() && file.isFile()) {
                FileInputStream fis = new FileInputStream(file);
                InputStreamReader isr = new InputStreamReader(fis, StringUtil.codeString(file.getPath()));
                BufferedReader buff = new BufferedReader(isr);
                props.load(buff);
                buff.close();
                isr.close();
                fis.close();
            }
        }
        return props;
    }

    public static void reloadValues() {
        try {
            ExternalCodeTableGetter.populateValues(getDefaultProperties(), values());
            MapleServerHandler.reloadHandlers();
        } catch (Exception e) {
            throw new RuntimeException("加載 recvops.properties 文件出現錯誤", e);
        }
    }

    @Override
    public short getValue() {
        return (short) code;
    }

    @Override
    public void setValue(short code) {
        this.code = code;
    }

    public boolean NeedsChecking() {
        return CheckState;
    }
}
